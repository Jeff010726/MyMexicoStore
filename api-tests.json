{
  "info": {
    "name": "墨西哥电商独立站 API 测试集合",
    "description": "完整的API接口测试用例集合",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://ecommerce-api.jeff010726bd.workers.dev",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. 用户管理测试",
      "item": [
        {
          "name": "1.1 用户注册",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"测试用户\",\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["users", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"注册成功\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.expect(response.data.email).to.eql('test@example.com');",
                  "    pm.collectionVariables.set('userId', response.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "1.2 用户登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["users", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"登录成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('token');",
                  "    pm.expect(response.data.user.email).to.eql('test@example.com');",
                  "    pm.collectionVariables.set('token', response.data.token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "1.3 获取用户资料",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取用户资料成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.expect(response.data).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. 商品管理测试",
      "item": [
        {
          "name": "2.1 获取商品列表",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products?page=1&limit=12",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "12"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取商品列表成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('products');",
                  "    pm.expect(response.data).to.have.property('pagination');",
                  "    pm.expect(response.data.products).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2.2 搜索商品",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products?search=厨房&category=kitchen",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "search",
                  "value": "厨房"
                },
                {
                  "key": "category",
                  "value": "kitchen"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"搜索商品成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.products).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2.3 获取商品详情",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/products/1",
              "host": ["{{baseUrl}}"],
              "path": ["products", "1"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取商品详情成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.expect(response.data).to.have.property('name');",
                  "    pm.expect(response.data).to.have.property('price');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. 订单管理测试",
      "item": [
        {
          "name": "3.1 创建订单",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"quantity\": 2,\n      \"price\": 299.99\n    }\n  ],\n  \"shippingAddress\": {\n    \"name\": \"张三\",\n    \"phone\": \"+52 123 456 7890\",\n    \"address\": \"Av. Insurgentes Sur 123\",\n    \"city\": \"Mexico City\",\n    \"state\": \"CDMX\",\n    \"zipCode\": \"01000\",\n    \"country\": \"Mexico\"\n  },\n  \"paymentMethod\": \"credit_card\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"创建订单成功\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('id');",
                  "    pm.expect(response.data).to.have.property('totalAmount');",
                  "    pm.expect(response.data.status).to.eql('pending');",
                  "    pm.collectionVariables.set('orderId', response.data.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3.2 获取用户订单列表",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/orders/user?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "user"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取订单列表成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('orders');",
                  "    pm.expect(response.data.orders).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. 支付管理测试",
      "item": [
        {
          "name": "4.1 创建支付意图",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"amount\": 649.98,\n  \"currency\": \"USD\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/airwallex/create-payment-intent",
              "host": ["{{baseUrl}}"],
              "path": ["airwallex", "create-payment-intent"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"创建支付意图成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('paymentIntentId');",
                  "    pm.expect(response.data).to.have.property('clientSecret');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. 数据统计测试",
      "item": [
        {
          "name": "5.1 获取仪表板数据",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "dashboard"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取仪表板数据成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('today');",
                  "    pm.expect(response.data).to.have.property('overall');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "5.2 获取销售数据",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/sales?period=7d",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "sales"],
              "query": [
                {
                  "key": "period",
                  "value": "7d"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"获取销售数据成功\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.have.property('summary');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}